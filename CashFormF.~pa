unit CashFormF;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  Grids, DBGrids, DB, StdCtrls, Buttons, DBTables, ExtCtrls, FileCtrl;
    procedure Check;
    procedure Prin;
const Pos_cou = 'select count(code) co from %s where nomer = :nomer';
type
  TCashForm = class(TForm)
    DBGrid1: TDBGrid;
    ToB: TBitBtn;
    Query1: TQuery;
    CB: TCheckBox;
    ToO: TBitBtn;
    CB1: TCheckBox;
    BitBtn1: TBitBtn;
    Timer1: TTimer;
    BOpl: TBitBtn;
    BSk: TBitBtn;
    BPol: TBitBtn;
    CB2: TCheckBox;
    Cb3: TCheckBox;
    Q1: TQuery;
    Q1Summa: TFloatField;
    ExBtn: TBitBtn;
    Quer1: TQuery;
    Query1co: TIntegerField;
    Spirt_dal: TQuery;
    Spirt_dalnomer: TStringField;
    Spirt_dalskol: TFloatField;
    Spirt_daladal: TFloatField;
    procedure DBGrid1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormActivate(Sender: TObject);
    procedure FormDeactivate(Sender: TObject);
    procedure ToBClick(Sender: TObject);
    procedure DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);

    procedure CBKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure CBClick(Sender: TObject);
    procedure ToOClick(Sender: TObject);
    procedure CB1Click(Sender: TObject);
    procedure CB1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure BitBtn1Click(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure BOplClick(Sender: TObject);
    procedure BSkClick(Sender: TObject);
    procedure BPolClick(Sender: TObject);
    procedure CB2Click(Sender: TObject);
    procedure CB2KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure Cb3Click(Sender: TObject);
    procedure Cb3KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure ExBtnClick(Sender: TObject);
    procedure DBGrid1TitleClick(Column: TColumn);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  CashForm: TCashForm;
  Dost : String;
implementation

uses Data, Pro, TovCh, Sklad, CashTF, PrintCashF, OplDataF, Klad_DataF,
  Klad_ChF;

{$R *.DFM}

procedure TCashForm.DBGrid1KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var S,S1 : String;
    I : Integer;
    L : Boolean;
begin
     L := False;

     case Key of
     VK_Space: if NasDost(Dost[46]) then
                if Datamain.CashNakl.IsEmpty
                      then
                          ShowMessage('Че смотреть то будем, нет ничего еще!')
                      else
                          With DataMain do
                               if not(CashNaklOTK.AsBoolean) then
                              begin

                                   CashNakl.Edit;
                                   CashNaklOtk.AsBoolean := True;
                                   CashNaklProv1.AsString := DostupNaim.AsString;
                                   CashNaklProv1D.AsDateTime := Now;
                                   CashNakl.Post;
                                   Application.CreateForm(TCashT, CashT);
                                   CashT.PC1.ActivePage := CashT.PC1.Pages[1];
                                   CashT.Label2.Caption := CashNaklNomer.AsString;
                                   CashT.Label10.Caption := DostupNaim.AsString;
                                   CashT.DE.Text := CashNaklOt.AsString;
                                   if CashNaklDost.AsBoolean then CashT.BitBtn1.Caption := CashNaklDostDat.AsString else CashT.BitBtn1.Caption := 'Организовать доставку';
                                   CashT.ED.Text := CashNaklSkidka.AsString;
                                   CashT.ShowModal;
                                   if CashNakl.State = dsBrowse then CashNakl.Edit;
                                   CashNaklOt.AsString := CashT.DE.Text;
                                   Try
                                   CashNaklSkidka.AsInteger := StrToInt(Trim(CashT.ED.Text));
                                   except
                                   CashNaklSkidka.AsInteger := 0;
                                   end;
                                   Try
                                   CashNaklSumma.AsFloat := StrToFloat(Trim(CashT.Label11.Caption));
                                   Except
                                   CashNaklSumma.AsFloat := 0;
                                   end;
                                   CashNaklOtk.AsBoolean := False;
                                   CashNakl.Post;
                                   CashT.Release;
                              end
                                else
                                  if MessageDlg('Накладная открыта другим пользователем'+#13+'но, может быть всетаки зайдем?',
                                  mtConfirmation, [mbYes, mbNo], 0) = mrYes then
                                  begin
                                   CashNakl.Edit;
                                   CashNaklOtk.AsBoolean := True;
                                   CashNaklProv1.AsString := DostupNaim.AsString;
                                   CashNaklProv1D.AsDateTime := Now;
                                   CashNakl.Post;
                                   Application.CreateForm(TCashT, CashT);
                                   CashT.PC1.ActivePage := CashT.PC1.Pages[1];

                                   CashT.Label2.Caption := CashNaklNomer.AsString;
                                   CashT.Label10.Caption := DostupNaim.AsString;
                                   CashT.DE.Text := CashNaklOt.AsString;
                                   if CashNaklDost.AsBoolean then CashT.BitBtn1.Caption := CashNaklDostDat.AsString else CashT.BitBtn1.Caption := 'Организовать доставку';
                                   CashT.ED.Text := CashNaklSkidka.AsString;
                                   if CashNaklCode_Firm.AsInteger = 6 then
                                   begin
                                      CashT.MyFirmBtn.tag := 6;
                                      CashT.MyFirmBtn.Caption := 'ИП Флейшер';
                                   end
                                   else
                                   begin
                                      CashT.MyFirmBtn.tag := 1;
                                      CashT.MyFirmBtn.Caption := 'ЗАО Рестайл';
                                   end;
                                   CashT.ShowModal;
                                   if CashNakl.State = dsBrowse then CashNakl.Edit;
                                   CashNaklOt.AsString := CashT.DE.Text;
                                   Try
                                   CashNaklSkidka.AsInteger := StrToInt(Trim(CashT.ED.Text));
                                   except
                                   CashNaklSkidka.AsInteger := 0;
                                   end;
                                   try
                                   CashNaklSumma.AsFloat := StrToFloat(Trim(CashT.Label11.Caption));
                                   except
                                   CashNaklSumma.AsFloat := 0;
                                   end;
                                   CashNaklOtk.AsBoolean := False;
                                   CashNakl.Post;
                                   CashT.Release;
                              end;

     VK_DELETE : if (NasDost(Dost[46]) and NasDost(Dost[47])) then
                 if not(DataMain.CashNaklRazrL.AsBoolean or DataMain.CashNaklOpl.AsBoolean or DataMain.CashNaklOtk.AsBoolean)  then
                  if MessageDlg('Удалить накладную?',
                     mtConfirmation, [mbNo, mbYes], 0) = mrYes then
                        With DataMain do begin
                           Valyta.Open;
                           Tovar.Open;
                           Ost.Open;
                           CashTN.Open;
                           CashTN.First;
                           While not(DataMain.CashTN.Eof) do
                             begin
                             I := CashTNKol.AsInteger;
                             if not(Ost.FindKey([CashTNCode.AsInteger])) and not(I=0) then
                                begin
                                ShowMessage('А как это??? Как Вы его смогли отписать то????');
                                CashTN.Next;
                                L := True;
                                end
                             else
                                 begin
                                Ost.Edit;
                                OstKol1.AsInteger := OstKol1.AsInteger + I;
                                Ost.Post;
                                CashTN.Delete;
                                end;
                             end;
                           if not(L) then CashNakl.Delete;
                           CashTN.Close;
                           Ost.Close;
                           Tovar.Close;
                           Valyta.Close;
                        end;
     VK_INSERT : if (NasDost(Dost[46]) and NasDost(Dost[47])) then
                 begin
                   S1 := '-Cash';
                   Datamain.CashNakl.DisableControls;
                   DataMain.CashNakl.Filtered := False;
                   DataMain.CashNakl.Refresh;
                   DataMain.CashNakl.Last;
                   Application.CreateForm(TCashT, CashT);
                   CashT.PC1.ActivePage := CashT.PC1.Pages[0];
                   CashT.Tag := 0;

                   With DataMain.CashNakl do
                   begin
                     Datamain.Config.Open;
                     DataMain.Config.Edit;
                     S := Trim(Datamain.ConfigNomer2.AsString);
                     IncNom(S,S1);
                     DataMain.ConfigNomer2.AsString := S;
                     DataMain.Config.Post;
                     DataMain.Config.Close;

                     Append;
                     FieldByName('Exp').ASBoolean := False;
                     FieldByname('Operac').AsString := Datamain.DostupNaim.AsString;
                     FieldByname('Prov1').AsString := Datamain.DostupNaim.AsString;
                     FieldByname('Data').AsDateTime := Now;
                     FieldByname('Prov1D').AsDateTime := Now;
                     FieldByName('PostupL').AsBoolean := False;
                     FieldByName('Gruz').AsBoolean := True;
                     FieldByName('Code_Gruz').AsInteger := 0;
                     FieldByName('Opl').AsBoolean := False;
                     FieldByName('Otp').AsBoolean := False;
                     FieldByName('PoluchL').AsBoolean := False;
                     FieldByName('RazrL').AsBoolean := False;
                     FieldByName('OTK').AsBoolean := True;
                     FieldByName('Nomer').AsString := S;
                     FieldByName('DOSTADD').AsString := 'САМОВЫВОЗ';
                     FieldByName('Ot').AsDateTime := Date();
                     FieldByName('Schet').AsBoolean := False;
                     FieldByName('Nal').AsBoolean := True;
                     FieldByName('Code_Pr').AsInteger := 0;
                     FieldByname('Oper').AsInteger := 1;
                     FieldByname('Schnom').AsInteger := 0;
                     FieldByname('Dost').AsBoolean := False;
                     FieldByname('Skidka').AsInteger := 0;
                     FieldByname('Code_Firm').AsInteger := 1;
                     Post;
                     CashT.MyFirmBtn.tag := 1;
                     if Datamain.CashNaklDost.AsBoolean then CashT.BitBtn1.Caption := Datamain.CashNaklDostDat.AsString else CashT.BitBtn1.Caption := 'Организовать доставку';

                     CashT.Label10.Caption := DataMain.DostupNaim.AsString;
                     CashT.Label2.Caption := FieldByName('Nomer').AsString;
                     CashT.DE.Text := FieldByName('Ot').AsString;
                     CashT.ED.Text := DataMain.CashNaklSkidka.AsString;
                     DataMain.CashNakl.EnableControls;

                     CashT.BitBtn2Click(nil);

                     CashT.ShowModal;
                     Edit;

                     FieldByName('Ot').AsString := CashT.DE.Text;
                     FieldByName('Skidka').AsInteger := StrToInt(Trim(CashT.ED.Text));
                     try
                       FieldByName('Summa').AsFloat := StrToFloat(Trim(CashT.Label11.Caption));
                     except
                       FieldByName('Summa').AsFloat := 0;
                     end;
                     FieldByName('OTK').AsBoolean := False;
                     Post;
                   end;
                   CashT.Release;
                 end;
     VK_F6 : if InputQuery('Поиск по номеру','Введите номер',S) then
                  With Datamain.CashNakl do
                       begin
                            DisableControls;
                            Locate('Nomer',S,[loPartialKey]);
                            enableControls;
                       end;
     VK_F7 : if InputQuery('Поиск по сч/ф','Введите номер сч/ф', S) then
                  With Datamain.CashNakl do
                       begin
                            DisableControls;
                            Locate('schnom',S,[]);
                            enableControls;
                       end;
     VK_F5 : if BitBtn1.Visible then Prin;
   end;

end;

procedure TCashForm.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
     if Key = VK_ESCAPE then
        begin
             CashForm.Release;
        end;

end;

procedure TCashForm.FormActivate(Sender: TObject);
begin
     With DataMain do
          begin
               if not Predpr.Active then Predpr.Open;
               if not CashNakl.Active then CashNakl.Open;
               Dost := DostupDost1.AsString;
               GrOper.Close;
          end;
     BitBtn1.Visible := NasDost(Dost[49]);
     ToO.Visible := NasDost(Dost[41]);
     BOpl.Visible := NasDost(Dost[42]);
     BSk.Visible := NasDost(Dost[43]);
     ToB.Visible := NasDost(Dost[44]);
     BPol.Visible := NasDost(Dost[45]);
     ExBtn.Visible := NasDost(Dost[8]);
     DataMain.CashNakl.Filtered := False;
end;

procedure TCashForm.FormDeactivate(Sender: TObject);
begin
     Query1.Close;
end;

procedure TCashForm.ToBClick(Sender: TObject);
var I : Integer;
begin

if ((Datamain.CashNaklOpl.AsBoolean or Datamain.CashNaklRazrL.AsBoolean) and Datamain.CashNaklPostupL.AsBoolean) then
with datamain do begin
     if MessageDlg('Товар отпущен?',
     mtConfirmation, [mbNo, mbYes], 0) = mrYes then
         begin
              CashNakl.Refresh;
              if not(CashNaklOtp.AsBoolean) then begin
                try
                  Application.CreateForm(TKlad_Ch, Klad_Ch);
                  if Klad_Ch.ShowModal = mrOk then
                  begin
                  with Klad_Data do
                    try
                      Quer1.Close;
                      Quer1.ParamByName('nomer').AsString := trim(CashNaklNomer.AsString);
                      Quer1.Open;
                      try
                        I := Query1Co.AsInteger;
                      except
                        I := 0;
                      end;
                      Quer1.Close;
                      Query2.ParamByName('klad_id').Asfloat := Klad_Ch.Tag;
                      Query2.Parambyname('Nomer').AsString := CashNaklNomer.AsString;
                      Query2.ParamByName('Pos_count').Asfloat := I;
                      Query2.ExecSQL;
                    except
                    end;
                  end
                finally
                  Klad_Ch.Release;
                end;
              CashNakl.Edit;
              CashNaklotp.AsBoolean := True;
              CashNaklDataOtp.AsDateTime := date();
              CashNaklOtps.AsString := Dostupnaim.AsString;
              CashNakl.Post;
              Tovar.Open;
              Valyta.open;
              Ost.Open;
              CashTN.Open;
              while not(CashTN.eof) do begin
                    Ost.FindKey([CashTNCode.AsInteger]);
                    Ost.Edit;
                    OstKol2.AsInteger := Ostkol2.AsInteger - CashTNKol.AsInteger;
                    Ost.post;
                    CashTN.Next;
              end;
              CashTN.Close;
              Ost.Close;
              Valyta.Close;
              Tovar.Close;
              ToB.Enabled := False;
              end;
         end;

         end
else
    ShowMessage('Отпуск товара со склада неразрешен!');
end;

procedure TCashForm.DBGrid1DrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn;
  State: TGridDrawState);
var a, b, c, d, e, f, g, ex, end_rab: Boolean;
begin
With DataMain do begin
a := (CashNaklOpl.AsBoolean or CashNaklRazrL.AsBoolean);
b := CashNaklOpl.AsBoolean; // Оплата
c := CashNaklRazrL.AsBoolean; // Разрешение
d := CashNaklPostupL.AsBoolean; // Поступление на склад
e := CashNaklOtp.AsBoolean; // Отпущено со склада
f := CashNaklPoluchL.AsBoolean; // Получено клиентом
ex := CashNaklExp.AsBoolean;
end_rab := CashNaklEnd_Rab.AsBoolean;
end;
g := True;
with DBGrid1.Canvas do begin

     if end_rab and not(b or c) and (not (gdFocused in State)) then
      begin
       Font.Color := clGray;
       FillRect (Rect);
       TextOut(Rect.Left,Rect.Top,Column.Field.Text);
//       g := false;
      end;

     if a and not(d) and (not (gdFocused in State)) then
      begin
       Font.Color := clRed;
       FillRect (Rect);
       TextOut(Rect.Left,Rect.Top,Column.Field.Text);
       g := false;
      end;
     if d and not(e) and (not (gdFocused in State)) then
      begin
       Font.Color := clBlue;
       FillRect (Rect);
       TextOut(Rect.Left,Rect.Top,Column.Field.Text);
       g := false;
      end;
     if e and not(F) and (not (gdFocused in State)) then
      begin
       Font.Color := clFuchsia;
       FillRect (Rect);
       TextOut(Rect.Left,Rect.Top,Column.Field.Text);
       g := false;
      end;
     if F and (not (gdFocused in State)) then
      begin
       Font.Color := clGreen;
       FillRect (Rect);
       TextOut(Rect.Left,Rect.Top,Column.Field.Text);
       g := false;
      end;


     if g then DBGrid1.DefaultDrawColumnCell(Rect,DataCol,Column,State);
     if gdFocused in State then
      begin
       if Ex then
         ExBtn.Font.Color := clRed
       else
         ExBtn.Font.Color := clBlack;
       if (b or c) then
          ExBtn.Enabled := True
       else
           ExBtn.Enabled := False;
       if b then
          Bopl.Enabled := False
       else
          Bopl.Enabled := True;
       if c then
          ToO.Enabled := False
       else
          ToO.Enabled := True;
       if d then
        begin
          BSk.Enabled := False;
        end
       else
        begin
          Bsk.Enabled := True;
        end;
       if e then
          ToB.Enabled := False
       else
          ToB.Enabled := True;
       if f then
          BPol.Enabled := False
       else
          BPol.Enabled :=True;
//       if (b or c or d or e or f) then CashT.tag := 1 else CashT.tag := 0;
      end;

end;

end;

procedure Check;
begin
     if CashForm.CB.Checked then
      begin
       DataMain.CashNakl.Filter := 'not([Otp])';
       DataMain.CashNakl.Filtered := True;
       CashForm.CB3.Enabled := False;
       CashForm.CB1.Enabled := False;
       CashForm.CB2.Enabled := False;
      end
     else
      begin
       DataMain.CashNakl.Filtered := False;
       CashForm.CB3.Enabled := True;
       CashForm.CB1.Enabled := True;
       CashForm.CB2.Enabled := True;
      end;
end;

procedure Check2;
begin
     if CashForm.CB1.Checked then
      begin
       DataMain.CashNakl.Filter := 'not([Opl])';
       DataMain.CashNakl.Filtered := True;
       CashForm.CB.Enabled := False;
       CashForm.CB3.Enabled := False;
       CashForm.CB2.Enabled := False;
      end
     else
      begin
       DataMain.CashNakl.Filtered := False;
       CashForm.CB.Enabled := True;
       CashForm.CB3.Enabled := True;
       CashForm.CB2.Enabled := True;
      end;
end;


procedure TCashForm.CBKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  Check;
end;

procedure TCashForm.CBClick(Sender: TObject);
begin
 Check;
end;

procedure TCashForm.ToOClick(Sender: TObject);
begin
if not DataMain.CashNaklEnd_Rab.AsBoolean then
begin
     ShowMessage('Работа с накладной еще не завершена!');
end
else
with datamain do begin
     if MessageDlg('Отпуск товара разрешен ?',
     mtConfirmation, [mbNo, mbYes], 0) = mrYes then
         begin
              CashNakl.Refresh;
              if not(CashNaklRazr.AsBoolean) then begin
              CashNakl.Edit;
              CashNaklRazrL.AsBoolean := True;
              CashNaklRazrDat.AsDateTime := date();
              CashNaklRazr.AsString := Datamain.DostupNaim.AsString;
              CashNakl.Post;
              ToO.Enabled := False;
              end;
         end;
end;
end;

procedure TCashForm.CB1Click(Sender: TObject);
begin
     Check2;
end;

procedure TCashForm.CB1KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
     Check2;
end;

procedure TCashForm.BitBtn1Click(Sender: TObject);
begin
Prin;
end;

procedure Prin;
var S,S1 : String;
begin
     if DataMain.CashnaklOtk.AsBoolean then
        ShowMessage('Тут кто-то есть! Точно, тут кто-то есть!!!')
     else
      with DataMain do
      begin
         CashForm.Timer1.Enabled := False;
         S := CashNaklNOMER.AsString;
         CashForm.Q1.Close;
         CashForm.Q1.ParamByname('Nakl').AsString := S;
         CashForm.Q1.Open;
         CashForm.Q1.First;
         CashNakl.Edit;
         CashNaklOtk.ASBoolean := True;
         if not(CashForm.Q1.Eof) then
            begin
                 try
                    CashNaklSumma.AsFloat := CashForm.Q1Summa.AsFloat;
                 except
                    CashNaklSumma.AsFloat := 0;
                 end;
            end;
         CashNakl.Post;
         CashForm.Q1.Close;
         CashNakl.DisableControls;
         Application.CreateForm(TPrintCash, PrintCash);
         S1 := S;
         Delete(S,Pos('-',S),Length(S));
         CashNakl.Tag := StrToInt(S);
         PrintCash.Table1.Open;
         Cashnakl.Filtered := False;
         Cashnakl.Filter := '';
         Cashnakl.Filtered := True;
         Cashnakl.Refresh;

         PrintCash.SHowModal;
         PrintCash.Table1.Close;
         Cashnakl.Filtered := False;
         Cashnakl.Tag := 0;
         PrintCash.Release;
         Cashnakl.Locate('Nomer',S1,[]);
         Cashnakl.EnableControls;
         Cashnakl.Edit;
         CashnaklOtk.ASBoolean := False;
         Cashnakl.Post;
         CashForm.Timer1.Enabled := True;
      end;
end;


procedure TCashForm.Timer1Timer(Sender: TObject);
begin
     DataMain.CashNakl.Refresh;
end;

procedure TCashForm.FormDestroy(Sender: TObject);
begin
     CloseData;
     Main.N8.Enabled := True;
     Quer1.UnPrepare;
end;

procedure TCashForm.BOplClick(Sender: TObject);
begin
Application.CreateForm(TOplData, OplData);
with datamain do begin
     if OplData.ShowModal = mrOk then
         begin
              CashNakl.Refresh;
              if not(CashNaklOpl.AsBoolean) then begin
              CashNakl.Edit;
              CashNaklOpl.AsBoolean := True;
              CashNaklDataOpl.AsDateTime := OplData.dat1.date;
              CashNaklOplS.AsString := DostupNaim.AsString;
// Добавить операциониста
              CashNakl.Post;
              BOpl.Enabled := False;
              end;
         end;
end;
OplData.release;

end;

procedure TCashForm.BSkClick(Sender: TObject);
begin
if (Datamain.CashNaklOpl.AsBoolean or Datamain.CashNaklRazrL.AsBoolean) then

with datamain do begin
     if MessageDlg('Накладная поступила на склад?',
     mtConfirmation, [mbNo, mbYes], 0) = mrYes then
         begin
              CashNakl.Refresh;
              if not(CashNaklPostupL.AsBoolean) then begin
              CashNakl.Edit;
              CashNaklPostupL.AsBoolean := True;
              CashNaklPostupDat.AsDateTime := date();
              CashNaklPostup.AsString := DostupNaim.AsString;
              CashNakl.Post;
              BSk.Enabled := False;
              end;
         end;
  end
else
    ShowMessage('Отпуск товара со склада неразрешен!');

end;

procedure TCashForm.BPolClick(Sender: TObject);
begin
if ((Datamain.CashNaklOpl.AsBoolean or Datamain.CashNaklRazrL.AsBoolean) and Datamain.CashNaklOtp.AsBoolean) then
with datamain do begin
     if MessageDlg('Клиент получил товар?',
     mtConfirmation, [mbNo, mbYes], 0) = mrYes then
         begin
              CashNakl.Refresh;
              if not(CashNaklPoluchL.AsBoolean) then begin
              CashNakl.Edit;
              CashNaklPoluchL.AsBoolean := True;
              CashNaklPoluchDat.AsDateTime := date();
              CashNaklPoluch.AsString := DostupNaim.AsString;
              CashNakl.Post;
              BPol.Enabled := False;
              end;
         end;
end
else
    ShowMessage('Это как? Еще не отгружено и уже получено???');

end;

procedure Check3;
begin
     if CashForm.CB2.Checked then
      begin
       DataMain.CashNakl.Filter := '[PostupL]';
       DataMain.CashNakl.Filtered := True;
       CashForm.CB.Enabled := False;
       CashForm.CB1.Enabled := False;
       CashForm.CB3.Enabled := False;
      end
     else
      begin
       DataMain.CashNakl.Filtered := False;
       CashForm.CB.Enabled := True;
       CashForm.CB1.Enabled := True;
       CashForm.CB3.Enabled := True;
      end;
end;

procedure Check4;
begin
     if CashForm.CB3.Checked then
      begin
       DataMain.CashNakl.Filter := 'not([PoluchL])';
       DataMain.CashNakl.Filtered := True;
       CashForm.CB.Enabled := False;
       CashForm.CB1.Enabled := False;
       CashForm.CB2.Enabled := False;
      end
     else
      begin
       DataMain.CashNakl.Filtered := False;
       CashForm.CB.Enabled := True;
       CashForm.CB1.Enabled := True;
       CashForm.CB2.Enabled := True;
      end;
end;





procedure TCashForm.CB2Click(Sender: TObject);
begin
Check3;
end;

procedure TCashForm.CB2KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
Check3;
end;

procedure TCashForm.Cb3Click(Sender: TObject);
begin
Check4;
end;

procedure TCashForm.Cb3KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
Check4;
end;

procedure TCashForm.FormClose(Sender: TObject; var Action: TCloseAction);
begin
     Action := caFree;
end;

procedure TCashForm.ExBtnClick(Sender: TObject);
begin
  With DataMain do
  begin
    if not(CashNaklOtk.AsBoolean) then
      Export_(trim(CashNaklNOMER.AsString),4,1, CashNakl)
    else
      ShowMessage('Накладная открыта другим пользователем, экспорт непроизведен!');
  end;

end;

procedure TCashForm.DBGrid1TitleClick(Column: TColumn);
begin
     if not((Column.FieldName = 'Predpr') or (Column.FieldName = 'Schet') or (Column.FieldName = 'DOSTDAT') or (Column.FieldName = 'Summa')) then
     DataMain.CashNakl.IndexName := Column.FieldName
     else
         if (Column.FieldName = 'Schet') then DataMain.CashNakl.IndexName := 'SchNom';

end;

procedure TCashForm.FormCreate(Sender: TObject);
begin
  Quer1.SQL.Clear;
  Quer1.SQL.Add(Format(Pos_Cou, ['CashTN']));
  Quer1.Prepare;

end;

end.
