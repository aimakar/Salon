unit SpravTov;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
   ExtCtrls, StdCtrls, Buttons, Grids, DBGrids, JvClock, Db,
  DBTables, ComCtrls, Menus, ActnList, XPStyleActnCtrls, ActnMan, ToolWin,
  ActnCtrls, JvExDBGrids, JvDBGrid, ComObj, ActiveX, Variants, IBCustomDataSet,
  IBQuery;

type
  TSprTov = class(TForm)
    ActionManager1: TActionManager;
    A_WinCr: TAction;
    ActionToolBar1: TActionToolBar;
    A_Ins: TAction;
    A_Edit: TAction;
    A_Del: TAction;
    A_Find: TAction;
    A_Exit: TAction;
    A_Per: TAction;
    A_Copy: TAction;
    JvDBGrid1: TJvDBGrid;
    Splitter1: TSplitter;
    JvDBGrid2: TJvDBGrid;
    DvigTov: TAction;
    IBQuery1: TIBQuery;
    IBQuery2: TIBQuery;
    Q_Izl: TIBQuery;
    Q_Vozv: TIBQuery;
    Q_Cash: TIBQuery;
    Q_Br: TIBQuery;
    Q_Prih: TIBQuery;
    Button1: TButton;
    procedure DBGrid1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure A_WinCrExecute(Sender: TObject);
    procedure A_DelExecute(Sender: TObject);
    procedure A_FindExecute(Sender: TObject);
    procedure A_EditExecute(Sender: TObject);
    procedure A_ExitExecute(Sender: TObject);
    procedure A_PerExecute(Sender: TObject);
    procedure A_InsExecute(Sender: TObject);
    procedure A_CopyExecute(Sender: TObject);
    procedure DvigTovExecute(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure JvDBGrid2CellClick(Column: TColumn);
    procedure FormClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  SprTov: TSprTov;
  d, d1, Mest : String;

implementation

uses Data, SprNovTov, SprNewGrTov, RedGrTov, Pro, Sklad,
   SprPVF, TovMoveF;

{$R *.DFM}

{procedure refr;
var
  nomer: string;
begin
with datamain do
    begin
      if .RecordCount = 0 then exit;
      nomer := .FieldByName('NOMER').AsString;
      .Close;
      .Open;
      .Locate('NOMER', nomer, []);
    end;

end;       }

procedure TSprTov.DBGrid1KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
     case Key of
          VK_RETURN : SprTov.ActiveControl := JvDBGrid2;
          VK_TAB    : SprTov.ActiveControl := JvDBGrid2;
     end;
end;

procedure TSprTov.A_InsExecute(Sender: TObject);
var NameI : string;
  I : integer;
begin
if Activecontrol = JvDBGrid1 then
  try
    Application.CreateForm(TNewGroup, NewGroup);
    NewGroup.ShowModal;
  finally
    NewGroup.Release;
  end
else
  try
    Application.CreateForm(TNewTov, NewTov);
    With DataMain do
    begin
      //NameI := Tovar.IndexName;
      Tovar.DisableControls;
      Config.Refresh;
      I := ConfigNomer7.AsInteger +1;
      Config.Edit;
      ConfigNomer7.AsInteger := I;
      Config.Post                         ;
      Tovar.Append;
      TovarCodeGR.AsInteger := GRTovarCodeGr.AsInteger;
      TovarCode.AsInteger := I;
      TovarVid.AsInteger := 0;
      TovarNDS.AsInteger := 18;
      TovarSpec.AsInteger := 1;
      Tovar.Post;
      Post.Open;
      Proiz.Open;
      Tovar.EnableControls;
      Tovar.Edit;
    end;
       if NewTov.ShowModal = mrCancel then
    begin
      DataMain.Tovar.Cancel;
      DataMain.Tovar.Delete;
    end
    else
      DataMain.Tovar.Post;
  finally
    NewTov.Release;
    DataMain.Post.Close;
    DataMain.Proiz.Close;
  end;
  DataMain.Tovar.ApplyUpdates;
  DataMain.IBT.CommitRetaining;
  DataMain.Tovar.Refresh;

end;

procedure TSprTov.A_EditExecute(Sender: TObject);
begin
  if ActiveControl = JvDBGrid1 then
  begin
    try
      Application.CreateForm(TPereim, Pereim);
      Pereim.ShowModal;
    finally
      Pereim.Release;
    end;
  end
  else
  begin
    try
      DataMain.Tovar.Edit;
      Application.CreateForm(TNewTov, NewTov);
      if NewTov.ShowModal = mrCancel then
        DataMain.Tovar.Cancel
      else
        DataMain.Tovar.Post;
    finally
      NewTov.Release;
    end;
  end;
  DataMain.Tovar.ApplyUpdates;
  DataMain.IBT.CommitRetaining;
  DataMain.Tovar.Refresh;
end;

procedure TSprTov.A_ExitExecute(Sender: TObject);
begin
  SprTov.Release;
end;

procedure TSprTov.DvigTovExecute(Sender: TObject); //отчёт
var
  i,k,s : integer;
  z: char;

begin
NewBook(true);
s:=1;
for k := 1 to 3 do
  begin
    MyExcel.Cells[s,k].Font.Size:=13;
    MyExcel.Cells[s,k].Font.Bold:=true;
  end;

MyExcel.Cells[s,s]:='Наименование';
MyExcel.Cells[s,3]:= dataMain.TovarNAIM.AsString ;
s:=3;
for k := 1 to 10 do
  begin
    MyExcel.Cells[s,k].Interior.Color := clGreen;
    MyExcel.Cells[s,k].Font.Size:=13;
    MyExcel.Cells[s,k].Font.Bold:=true;
  end;
k:=1;
while k<=10  do
  begin
    MyExcel.Cells[4,k]:='Дата';
    MyExcel.Cells[4,k+1]:='Шт.';
    k:=k+2;
  end;
 
MerCen('A1:B1');
MerCen('A3:B3');
MerCen('C3:D3');
MerCen('E3:F3');
MerCen('G3:H3');
MerCen('I3:J3');
MyExcel.Cells[s,1]:='Приход';
MyExcel.Cells[s,3]:='Оприходования';
MyExcel.Cells[s,5]:='Возврат';
MyExcel.Cells[s,7]:='Продажа';
MyExcel.Cells[s,9]:='Списание';
for z:='A' to 'J' do
  MyExcel.Columns.Range[z+':'+z].ColumnWidth := 10;
MyExcel.Range['A4:J4'].Select;
MyExcel.Selection.HorizontalAlignment := xlCenter;
MyExcel.Selection.VerticalAlignment := xlCenter;
MyExcel.Range['A1:B1'].Select;
    try
    // смстрим приходные накладные
      i:=5;
      Q_prih.Close;
      Q_prih.ParamByName('code').AsInteger:= dataMain.TovarCODE.AsInteger;
      Q_prih.Open;
      while not Q_prih.EOF do
      Begin
        MyExcel.Cells[i,1]:=Q_prih.FieldByName('ot').AsString;
        MyExcel.Cells[i,2]:=Q_prih.FieldByName('kol').AsString;
        Q_prih.Next;
        i:=i+1;
      End;
    // смотрим излишки
      i:=5;
      Q_Izl.Close;
      Q_Izl.ParamByName('code').AsInteger:= dataMain.TovarCODE.AsInteger;
      Q_Izl.Open;
      while not Q_Izl.EOF do
      Begin
        MyExcel.Cells[i,3]:=Q_Izl.FieldByName('ot').AsString;
        MyExcel.Cells[i,4]:=Q_Izl.FieldByName('kol').AsString;
        Q_Izl.Next;
        i:=i+1;
      End;
     // возвраты
      i:=5;
      Q_Vozv.Close;
      Q_Vozv.ParamByName('code').AsInteger:= dataMain.TovarCODE.AsInteger;
      Q_Vozv.Open;
      while not Q_Vozv.EOF do
      Begin
        MyExcel.Cells[i,5]:=Q_Vozv.FieldByName('ot').AsString;
        MyExcel.Cells[i,6]:=Q_Vozv.FieldByName('kol').AsString;
        Q_Vozv.Next;
        i:=i+1;
      End;
     // продажи
      i:=5;
      Q_Cash.Close;
      Q_Cash.ParamByName('code').AsInteger:= dataMain.TovarCODE.AsInteger;
      Q_Cash.Open;
      while not Q_Cash.EOF do
      Begin
        MyExcel.Cells[i,7]:=Q_Cash.FieldByName('ot').AsString;
        MyExcel.Cells[i,8]:=Q_Cash.FieldByName('kol').AsString;
        Q_Cash.Next;
        i:=i+1;
      End;
     // списание
      i:=5;
      Q_Br.Close;
      Q_Br.ParamByName('code').AsInteger:= dataMain.TovarCODE.AsInteger;
      Q_Br.Open;
      while not Q_Br.EOF do
      Begin
        MyExcel.Cells[i,9]:=Q_Br.FieldByName('ot').AsString;
        MyExcel.Cells[i,10]:=Q_Br.FieldByName('kol').AsString;
        Q_Br.Next;
        i:=i+1;
      End;

    except on E: Exception do
          begin
            ShowMessage('Обнаружена ошибка: ' + #13 + E.Message);
          end;

    end;
SetForegroundWindow(MyExcel.Hwnd);
MyExcel:=UnAssigned;
end;

procedure TSprTov.A_CopyExecute(Sender: TObject);
Var I, apr,ap,av,an,ac,au,at, bonus : Integer;
    s, NameI,bn,bc1,bc2 : String;
    cp,cn,cpb : Real;
begin
  if ActiveControl = JvDBGrid2 then
  begin
    if MessageDlg('Копировать запись?', mtConfirmation, [mbYes, mbNo], 0) = mrYes then
    begin
      with DataMain do
      begin
        bn := tovarnaim.AsString;
        apr := tovarcode_pr.AsInteger;
        ap := tovarcode_post.AsInteger;
        av := tovarcode_Val.AsInteger;
        cp := tovarprihod.AsFloat;
        bc1 := tovarcomm1.AsString;
        bc2 := tovarComm2.AsString;
        cn := tovarNacen.AsFloat;
        cpb := tovarPrice_B.AsFloat;
        an := tovarNds.AsInteger;
        ac := tovarCodeGr.AsInteger;
        au := tovarUp.AsInteger;
        s := tovarSpec.AsString;
        at := tovarType_T.AsInteger;
        d := tovarDataSert.AsString;
        bonus := tovarbonus.AsInteger;
        //NameI := Tovar.IndexName;
        Tovar.DisableControls;
        Config.Close;
        Config.Open;
        I := ConfigNomer7.AsInteger;
        Config.Edit;
        ConfigNomer7.AsInteger := I+1;
        Config.Post;
        Tovar.Append;
        TovarCode.AsInteger := I+1;
        TovarNDS.AsInteger := an;
        TovarSpec.AsString := s;
        TovarNaim.AsString := bn;
        TovarCode_Pr.AsInteger := apr;
        TovarCode_Post.AsInteger := ap;
        TovarCode_Val.AsInteger := av;
        TovarPrihod.AsFloat := cp;
        TovarComm1.AsString := bc1;
        TovarComm2.AsString := bc2;
        TovarNacen.AsFloat := cn;
        TovarPrice_B.AsFloat := cpb;
        TovarCOdeGr.AsInteger := ac;
        TovarUp.AsInteger := au;
        TovarType_T.AsInteger := at;
        TovarDataSert.AsString := d;
        Tovarbonus.AsInteger := bonus;
        Tovar.Post;

{Вставить валюту по умолчанию}
        Post.Open;
        Proiz.Open;
        Tovar.EnableControls;
        Tovar.ApplyUpdates;
        DataMain.IBT.CommitRetaining;
        DataMain.Tovar.Refresh;
      end;
    end;
  end;
end;

procedure TSprTov.A_DelExecute(Sender: TObject);
Var I : Integer;
    s : boolean;
    TS : array [1..5] of String;

begin
  if ActiveControl = JvDBGrid1 then
  begin
    if MessageDlg('Удалить группу?', mtConfirmation, [mbYes, mbNo], 0) = mrYes then
    begin
      IBQuery1.Close;   // проверка группы на наличие в ней товара
      IBQuery1.ParamByName('CODEGR').AsInteger:=Datamain.GrTovarCodeGR.AsInteger;
      IBQuery1.Open;
      if not(IBQuery1.RecordCount > 0) then
      begin
        DataMain.GrTovar.Delete;
        DataMain.GrTovar.ApplyUpdates;
        DataMain.IBT.CommitRetaining;
        DataMain.GrTovar.Refresh;
      end
    else
        ShowMessage('В группе есть товар!');
    end;
  end
  else
  Begin
    if MessageDlg('Удалить запись?', mtConfirmation, [mbYes, mbNo], 0) = mrYes then
    begin
      S := False;
      Ts[1] := 'TnPrih';
      Ts[2] := 'TnVozv';
      Ts[3] := 'CashTn';
      Ts[4] := 'IzlTn';
      Ts[5] := 'BrTn';
      for I := 1 to 5 do
      begin
        if not(S) then
        begin
          IBQuery2.Close;       // поиск товара в накладных
          IBQuery2.SQL.Clear;
          IBQuery2.SQL.Add('select code from '+Ts[i]+' where code= :code');
          IBQuery2.Prepare;
          IBQuery2.ParamByName('Code').AsInteger:=DataMain.TovarCODE.AsInteger;
          IBQuery2.Open;
          S:= IBQuery2.RecordCount >0;
        end;
      end;

      if S then   ShowMessage('Позиция есть в накладных!')
      else
      datamain.Tovar.Delete;
    end;
  end;
   DataMain.Tovar.ApplyUpdates;
   DataMain.IBT.CommitRetaining;
   DataMain.Tovar.Refresh;
end;

procedure TSprTov.A_FindExecute(Sender: TObject);
var S : boolean;
begin
  if ActiveControl = JvDBGrid1 then
  begin
    if InputQuery('Поиск по названию группы','Введите название группы',d1) then
    With DataMain.GrTovar do
    begin
      DisableControls;
      S := True;
      While (S and not(Eof)) do
      if Pos(AnsiUpperCase(D1),AnsiUpperCase(FieldByName('Naim').AsString))=0 then
        Next
      else
        S := False;
      EnableControls;
    end;
  end
  else
  if InputQuery('Поиск по названию','Введите название товара',d) then
  With DataMain.Tovar do
  begin
    DisableControls;
    S := True;
    While (S and not(Eof)) do
      if Pos(AnsiUpperCase(D),AnsiUpperCase(FieldByName('Naim').AsString))=0 then
        Next
      else
        S := False;
    EnableControls;
  end;
end;



procedure TSprTov.A_PerExecute(Sender: TObject);
begin
  If DataMain.Tovar.IsEmpty then exit;
  try
    Application.createForm(TTovMove, TovMove);
    TovMove.Query1.Open;
    if TovMove.ShowModal = mrOk then
    begin
      DataMain.Tovar.Edit;
      DataMain.Tovarcodegr.AsInteger := TovMove.Query1CodeGr.AsInteger;
      DataMain.Tovar.Post;
    end;
  finally
    TovMove.Query1.CLose;
    TovMove.Release;
  end;
   DataMain.Tovar.ApplyUpdates;
   DataMain.IBT.CommitRetaining;
   DataMain.Tovar.Refresh;
end;

procedure TSprTov.A_WinCrExecute(Sender: TObject);
begin
     With DataMain do
          begin
            //   Tovar.Close;
               if not IBT.InTransaction then  IBT.StartTransaction;

               tt.open;
               Ost.Open;
               Tovar.Open;
               //Tovar.Active := True;
               GRTovar.Active := True;
               Config.Open;
               Tovar.Refresh;
          end;
end;

procedure TSprTov.Button1Click(Sender: TObject);
begin
//DataMain.Tovar.Close;
//DataMain.Tovar.Open;
DataMain.Tovar.Refresh;
end;

procedure TSprTov.FormClick(Sender: TObject);
begin
   DataMain.Tovar.Refresh;
end;

procedure TSprTov.FormClose(Sender: TObject; var Action: TCloseAction);
begin
if  DataMain.IBT.InTransaction then DataMain.IBT.Commit;

     Action := caFree;
end;

procedure TSprTov.JvDBGrid2CellClick(Column: TColumn);
begin
   DataMain.Tovar.Refresh;
end;

end.
