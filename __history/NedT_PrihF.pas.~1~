unit NedT_PrihF;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  DBCtrls, ExtCtrls, StdCtrls, Mask, JvToolEdit, Grids, DBGrids, Db, DBTables,
  Buttons, JvExMask;

  procedure SumTxt1;
  procedure SumText(A : String; P : Real; var S,S1 : String);


type
  TNedT_Prih = class(TForm)
    Label1: TLabel;
    Label2: TLabel;

    DBMemo1: TDBMemo;
    Label6: TLabel;
    DG: TDBGrid;
    Label9: TLabel;
    Label11: TLabel;
    Q1: TQuery;
    Timer1: TTimer;
    Label3: TLabel;
    PRL: TDBLookupComboBox;
    DE: TJvDateEdit;
    procedure FormActivate(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormDeactivate(Sender: TObject);
    procedure DGKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure DGKeyPress(Sender: TObject; var Key: Char);
    procedure DGEnter(Sender: TObject);
    procedure DGExit(Sender: TObject);
    procedure DEKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure Timer1Timer(Sender: TObject);
    procedure PRLKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);

  private
  Sk : String;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  NedT_Prih: TNedT_Prih;
  Dost : String;
implementation

uses Data, Pro, NomForm, DobTovNedF, SprPostVybF, NewPostF, SprNewPredpr;

{$R *.DFM}

procedure TNedT_Prih.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
if Key=VK_ESCAPE then
      NedT_Prih.ModalResult := mrOk;

end;

procedure TNedT_Prih.FormActivate(Sender: TObject);
begin
     q1.Prepare;

     With DataMain do
          begin
               NedTN.Open;

          end;
  Dost := DataMain.dost;
     SumTxt1;
     NedT_Prih.ActiveControl := DE;
     Datamain.NedTN.First;
     if (not(Nasdost(Dost[37])) and (NedT_Prih.tag <> 1)) then NedT_Prih.tag := 1;

     if NedT_Prih.Tag = 1 then begin
        DE.Enabled := False;
        DBMemo1.Enabled := False;
       end
     else
       begin
        DE.Enabled := True;
        DBMemo1.Enabled := True;
       end;

Timer1.Enabled := True;
  Application.CreateForm(TNomF, NomF);

end;

procedure TNedT_Prih.FormDeactivate(Sender: TObject);
begin
Timer1.Enabled := False;
     With DataMain do
          begin
            NedTN.Close;
          end;
     q1.Close;
     q1.UnPrepare;

        DE.Enabled := True;
        DBMemo1.Enabled := True;
  NomF.Release;

end;



procedure TNedT_Prih.DGKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var S : String;
begin
S := '';
if NedT_Prih.Tag = 0 then
     case Key of
          VK_INSERT : begin
                     DataMain.NedTn.OnCalcFields := nil;
                     Application.CreateForm(TDobTovNed, DobTovNed);
                     DobTovNed.ShowModal;
                     SumTXT1;
                     DobTovNed.Release;
                     DataMain.NedTn.OnCalcFields := DataMain.NedTNCalcFields;
                     Datamain.NedTN.Refresh;
                      end;
          VK_DELETE : if MessageDlg('Удалить позицию?',
                         mtConfirmation, [mbYes, mbNo], 0) = mrYes then
                         begin
                         DataMain.Ost.FindKey([DataMain.NedTN.FieldBYName('Code').AsInteger]);
                         DataMain.Ost.Edit;
                         DataMain.Ost.FieldByName('Kol1').AsInteger := DataMain.NedTN.FieldByName('Kol').AsInteger+DataMain.Ost.FieldByName('Kol1').AsInteger;
                         DataMain.Ost.Post;
                         DataMain.NedTN.Delete;
                         SumTxt1;
                         DataMain.NedTN.Refresh;
                         end;
          VK_ESCAPE : NedT_Prih.ActiveControl := DE;
     end;

end;

procedure SumTxt1;
var S,S1 : String;
begin
     S := NedT_Prih.Label11.Caption;
     S1 := '';
     SumText(DataMain.NedTN.FieldByName('Nomer').asString,0,S,S1);
     NedT_Prih.Label11.Caption := S;
end;

procedure SumText(A : String; P : Real; var S,S1 : String);
begin
with NedT_Prih do begin
    Q1.Close;
    Q1.ParamByName('Nakl').AsString := A;
    Q1.Open;
    S := FloatToStr(Q1.FieldByName('Summa').AsFloat);
    S1 := FloatToStr(Q1.FieldByName('Summa').AsFloat*P);
end;
end;



procedure TNedT_Prih.DGKeyPress(Sender: TObject; var Key: Char);
var A,B,C : Integer;
    S : String;
begin
     if NedT_Prih.Tag = 0
      then
        case DG.SelectedIndex of
{        2 : case Key of
               #13 : begin
                  B := DataMain.NedTN.FieldByName('Kol').AsInteger;
                  NomF.Edit1.Text := '';
                  NomF.Edit1.EditMask := '99999;; ';
                  if NomF.ShowModal = mrOk
                   then
                     with datamain do begin
                     A := StrToInt(Trim(NomF.Edit1.Text));
                     C := A*NedTN.FieldBYName('V_Up').AsInteger;
                     Ost.Refresh;
                     if C <= NedTN.FieldByName('Ost').AsInteger+B
                      then
                          begin
                               NedTN.Edit;
                               NedTN.FieldByName('Up').AsInteger := A;
                               NedTN.FieldByName('Kol').AsInteger := C;
                               NedTN.Post;
                               Ost.FindKey([NedTN.FieldBYName('Code').AsInteger]);
                               Ost.Edit;
                               Ost.FieldByName('Kol1').AsInteger := Ost.FieldByName('Kol1').AsInteger + B - C;
                               Ost.Post;
                               SumTxt1;
                          end
                      else
                          ShowMessage ('На складе нет данного количества товара!'+#13+#13+
                           'Остаток '+IntToStr(NedTN.FieldByName('Ost').AsInteger+B));
                     end;
                   end;
             End;
        3 : case Key of
               #13 : begin
                  B := DataMain.NedTN.FieldByName('Kol').AsInteger;
                  NomF.Edit1.Text := '';
                  NomF.Edit1.EditMask := '99999;; ';
                  if NomF.ShowModal = mrOk
                   then
                     with datamain do begin
                     A := StrToInt(Trim(NomF.Edit1.Text));
                     Ost.Refresh;
                     if A <= NedTN.FieldByName('Ost').AsInteger+B
                      then
                          begin
                               NedTN.Edit;
                               NedTN.FieldByName('Up').AsInteger := 0;
                               NedTN.FieldByName('Kol').AsInteger := A;
                               NedTN.Post;
                               Ost.FindKey([NedTN.FieldBYName('Code').AsInteger]);
                               Ost.Edit;
                               Ost.FieldByName('Kol1').AsInteger := Ost.FieldByName('Kol1').AsInteger + B - A;
                               Ost.Post;
                               SumTxt1;
                          end
                      else
                          ShowMessage ('На складе нет данного количества товара!'+#13+#13+
                           'Остаток '+IntToStr(NedTN.FieldByName('Ost').AsInteger+B));
                     end;
                   end;
             End;}
        4 : case Key of
               #13 : begin
                  NomF.Edit1.Text := '';
                  NomF.Edit1.EditMask := '99999,99;; ';
                  if NomF.ShowModal = mrOk
                   then
                     with datamain do begin
                     S := '';
                     S := NomF.Edit1.Text;
                     TrimAll(S);
                     NedTN.Edit;
                     NedTN.FieldByName('Price').AsFloat := StrToFloat(S);
                     NedTN.Post;
                     SumTxt1;
                     end;
                  end;
             End;

        end;
if DataMain.Ost.State = dsBrowse then DataMain.Ost.Refresh;
if DataMain.NedTN.State = dsBrowse then DataMain.NedTN.Refresh;


end;

//end;

procedure TNedT_Prih.DGEnter(Sender: TObject);
begin
     if NedT_Prih.Tag = 0 then
     NedT_Prih.KeyPreview := False;
end;

procedure TNedT_Prih.DGExit(Sender: TObject);
begin
     if NedT_Prih.Tag = 0 then
     NedT_Prih.KeyPreview := True;
end;


procedure TNedT_Prih.DEKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
     if Key = VK_RETURN then NedT_Prih.ActiveControl := DG;
end;

procedure TNedT_Prih.Timer1Timer(Sender: TObject);
begin
     with DataMain do
         begin
              NedNakl.Refresh;
              Ost.Refresh;
              NedTN.Refresh;
         end;

end;

procedure TNedT_Prih.PRLKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var NameI : String;
    I : Integer;
begin
     If NedT_Prih.Tag = 0 then
     case Key of
          VK_DOWN,VK_UP : if not(NedT_Prih.Prl.ListVisible) then Key := 0;
          VK_SPACE : if not(NedT_Prih.Prl.ListVisible) then NedT_Prih.Prl.DropDown;
          VK_RETURN : begin
                        NedT_Prih.Prl.CloseUp(True);
                        NedT_Prih.ActiveControl := DBMemo1;
                      end;
          VK_F6 : begin
                Application.CreateForm(TSprPostVyb,SprPostVyb);
                SprPostVyb.ShowModal;
                if SprPostVyb.Tag <> 0 then begin
                DataMain.NedNakl.Edit;
                DataMain.NedNaklCode_Post.AsInteger := SprPostVyb.Tag;
                DataMain.NedNakl.Post;
                PRL.Update;
                end;
                SprPostVyb.Release;
                  end;
          end;
     If NedT_Prih.Tag = 0 then
     case Key of
          VK_INSERT : begin
                    NewPost.Caption := 'Добаление нового поставщика';
                    NewPost.CheckBox1.Enabled := True;
                    NewPost.CheckBox2.Enabled := True;
                    With DataMain do
                         begin
                              Post.Refresh;
                              NameI := Post.IndexName;
                              Post.IndexName := '';
                              Post.Last;
                              I := Post.FieldByName('Code_Post').AsInteger;
                              Post.IndexName := NameI;
                              Post.Append;
                              Post.FieldByName('Code_Post').AsInteger := I+1;
                              Post.FieldByName('Cons').AsInteger :=0;
                              Post.Post;
                              Post.Edit;
//                                   Timer1.Enabled :=False;

                              if NewPost.ShowModal = mrCancel then
                                 begin
                                      Post.Cancel;
                                      Post.Delete;
                                 end
                              else
                                  Post.post;
//                                   Timer1.Enabled :=True;

                              If NewPost.CheckBox1.Checked then begin
                                 Predpr.Open;
                                 NameI := Predpr.Indexname;
                                 Predpr.IndexName :='';
                                 Predpr.Last;
                                 I := Predpr.FieldByName('Code_Pr').AsInteger;
                                 Predpr.IndexName :=NameI;
                                 Predpr.Append;
                                 Predpr.FieldByName('Code_Pr').AsInteger := I+1;
                                 Predpr.FieldByName('Naim').AsString := Post.FieldByName('Naim').AsString;
                                 Predpr.Post;
                                 if MessageDlg('Желаете отредактировать данные клиента?',
                                 mtConfirmation, [mbYes, mbNo], 0) = mrYes then begin
                                      NewPredpr.CheckBox1.Enabled := False;
                                      NewPredpr.CheckBox2.Enabled := False;
                                      Predpr.Edit;
                                      NewPredpr.ShowModal;
                                      Predpr.Post;
                                 end;
                                 Predpr.Close;
                              end;
                              If NewPost.CheckBox2.Checked then begin
                                 Proiz.Open;
                                 NameI := Proiz.IndexName;
                                 Proiz.IndexName := '';
                                 Proiz.Last;
                                 I := Proiz.FieldByName('Code_Proiz').AsInteger;
                                 Proiz.IndexName := NameI;
                                 Proiz.Append;
                                 Proiz.FieldByName('Code_Proiz').AsInteger := I+1;
                                 Proiz.FieldByName('Naim').AsString := Post.FieldByName('Naim').AsString;
                                 Proiz.FieldByName('Naim').AsString := Post.FieldByName('Prim').AsString;
                                 Proiz.Post;
                                 Proiz.Close;
                              end;
                         end;
                      end;
          VK_DOWN,VK_UP : if not(NedT_Prih.Prl.ListVisible) then Key := 0;
          VK_SPACE : if not(NedT_Prih.Prl.ListVisible) then NedT_Prih.Prl.DropDown;
          VK_RETURN : begin
                        NedT_Prih.Prl.CloseUp(True);
                        NedT_Prih.ActiveControl := DBMemo1;
                      end;
          end;
end;


end.
